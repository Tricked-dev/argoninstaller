#https://github.com/Thomas-Sohier/argoninstaller/blob/main/.github/workflows/main.workflow.yml
name: Main workflow
on: push

jobs:
  build_windows:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: Windows-2019
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2.2.0
        with:
          channel: stable
          cache: true
      - run: flutter config --enable-windows-desktop
      - run: flutter pub get
      - run: flutter pub run flutter_native_splash:create
      - run: flutter build windows
      - run: choco install make -y
      - run: make innoinstall
      - run: make inno
      - name: Create a windows app-bundle
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          path: 'build/windows/runner/Release'
          filename: 'ArgonInstaller-windows-x86_64.zip'
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: false
          files: |
            build/installer/*-setup.exe
            build/*-setup.exe
            scripts/*-setup.exe
            scripts/Output/*-setup.exe
            ArgonInstaller-windows-x86_64.zip
          token: ${{ secrets.GITHUB_TOKEN }}

  build_linux:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - run: sudo apt-get update -y
      - run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev vlc libvlc-dev libwebkit2gtk-4.0-dev libmediainfo-dev dpkg-dev alien
      - run: flutter config --enable-linux-desktop
      - run: flutter pub get
      - run: flutter pub run flutter_native_splash:create
      - run: flutter build linux  --release

      - name: Build .deb executable
        run: |
          cp -fr build/linux/x64/release/bundle linux/debian/usr/bin
          dpkg-deb --build --root-owner-group linux/debian
          cp linux/*.deb argoninstaller-linux-x86_64.deb

      - name: Build .rpm executable
        run: |
          alien -r argoninstaller-linux-x86_64.deb
          mv argoninstaller*.rpm argoninstaller-linux-x86_64.rpm

      - name: Build Tarball
        run: |
          mkdir -p AppDir/
          cp -r linux/debian/usr AppDir/
          ln -sr AppDir/usr/bin/argoninstaller AppDir/argoninstaller
          tar czf argoninstaller-linux-x86_64.tar.gz -C AppDir/ .

      - name: Build AppImage
        run: |
          echo '#!/bin/sh
          cd "$(dirname "$0")"
          exec ./argoninstaller' > AppDir/AppRun
          chmod +x AppDir/AppRun
          chmod +x AppDir/argoninstaller
          cp AppDir/usr/share/icons/hicolor/256x256/apps/argoninstaller.png AppDir/argoninstaller.png
          cp AppDir/usr/share/applications/argoninstaller.desktop AppDir/argoninstaller.desktop
          curl -L https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -o appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage
          ARCH=x86_64 ./appimagetool-x86_64.AppImage AppDir/ argoninstaller-linux-x86_64.AppImage

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: false
          files: argoninstaller-linux-*
          token: ${{ secrets.GITHUB_TOKEN }}
