#https://github.com/Thomas-Sohier/argoninstaller/blob/main/.github/workflows/main.workflow.yml
name: Main workflow
on: push

# env:
#   KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
#   KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
#   ALIAS: ${{ secrets.ALIAS }}
#   KEY_PATH: key.jks

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - run: ls
        # - uses: actions/checkout@v2
        # - uses: subosito/flutter-action@v1
        #   with:
        #     channel: 'stable'

        # - run: flutter pub get
        # - run: flutter format --set-exit-if-changed .
        # - run: flutter analyze .

  # build_windows:
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   needs: test

  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: subosito/flutter-action@v1
  #       with:
  #         channel: 'stable'
  #     - run: flutter config --enable-windows-desktop
  #     - run: flutter build windows --release
  #     # - run: cp windows/libs/sqlite3.dll build/windows/runner/Release/sqlite3.dll

  # - name: Create a windows app-bundle
  #   uses: thedoctor0/zip-release@master
  #   with:
  #     type: 'zip'
  #     path: 'build/windows/runner/Release'
  #     filename: 'argoninstaller-windows.zip'

  #     - name: Release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         draft: true
  #         prerelease: false
  #         files: argoninstaller-windows.zip
  #         token: ${{ secrets.GITHUB_TOKEN }}

  build_windows:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2.2.0
        with:
          channel: beta
          cache: true
      - run: flutter config --enable-windows-desktop
      - run: flutter pub get
      # - run: flutter pub run msix:create
      - run: flutter pub run flutter_native_splash:create
      - run: flutter build windows
      - run: choco install make -y
      - run: make innoinstall
      - run: make inno
      - name: Create a windows app-bundle
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          path: 'build/windows/runner/Release'
          filename: 'ArgonInstaller-windows-x86_64.zip'
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: false
          files: |
            build/installer/*-setup.exe
            build/*-setup.exe
            scripts/*-setup.exe
            scripts/Output/*-setup.exe
            ArgonInstaller-windows-x86_64.zip
          token: ${{ secrets.GITHUB_TOKEN }}

  build_linux:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - run: sudo apt-get update -y
      - run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev vlc libvlc-dev libwebkit2gtk-4.0-dev libmediainfo-dev dpkg-dev alien
      - run: flutter config --enable-linux-desktop
      - run: flutter pub get
      - run: flutter pub run flutter_native_splash:create
      - run: flutter build linux  --release

      - name: Build .deb executable
        run: |
          cp -fr build/linux/x64/release/bundle linux/debian/usr/bin
          dpkg-deb --build --root-owner-group linux/debian
          cp linux/*.deb argoninstaller-linux-x86_64.deb

      - name: Build .rpm executable
        run: |
          alien -r argoninstaller-linux-x86_64.deb
          mv argoninstaller*.rpm argoninstaller-linux-x86_64.rpm

      - name: Build Tarball
        run: |
          mkdir -p AppDir/
          cp -r linux/debian/usr AppDir/
          ln -sr AppDir/usr/bin/argoninstaller AppDir/argoninstaller
          tar czf argoninstaller-linux-x86_64.tar.gz -C AppDir/ .

      - name: Build AppImage
        run: |
          echo '#!/bin/sh
          cd "$(dirname "$0")"
          exec ./argoninstaller' > AppDir/AppRun
          chmod +x AppDir/AppRun
          chmod +x AppDir/argoninstaller
          cp AppDir/usr/share/icons/hicolor/256x256/apps/argoninstaller.png AppDir/argoninstaller.png
          cp AppDir/usr/share/applications/argoninstaller.desktop AppDir/argoninstaller.desktop
          curl -L https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -o appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage
          ARCH=x86_64 ./appimagetool-x86_64.AppImage AppDir/ argoninstaller-linux-x86_64.AppImage

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: false
          files: argoninstaller-linux-*
          token: ${{ secrets.GITHUB_TOKEN }}

  # macos-Build:
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   runs-on: macos-11
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Cache flutter
  #       uses: actions/cache@v2
  #       with:
  #         path: ${{ runner.tool_cache }}/flutter
  #         key: ${{ runner.os }}-2.10.0-0.3.pre
  #     - uses: subosito/flutter-action@master
  #       with:
  #         channel: beta
  #         flutter-version: 2.10.0-0.2.pre
  #     - name: Build
  #       run: |
  #         flutter pub get
  #         flutter config --enable-macos-desktop
  #         dart pub global activate cider
  #         dart pub global run cider version ${{ env.rwl_version_full }}
  #         flutter build macos --dart-define="build_id=${{ github.run_number }}" --dart-define="version_type=${{  env.version_type  }}" --dart-define="version=${{ secrets.VERSION  }}" --release
  #         cp assets/images/MacOS_Logo_Icon.icns build/macos/Build/Products
  #         cd build/macos/Build/Products
  #         brew install create-dmg
  #         create-dmg \
  #         --volname "ArgonInstaller" \
  #         --volicon "MacOS_Logo_Icon.icns" \
  #         --window-pos 200 120 \
  #         --window-size 800 529 \
  #         --icon-size 130 \
  #         --text-size 14 \
  #         --icon "ArgonInstaller.app" 260 250 \
  #         --hide-extension "ArgonInstaller.app" \
  #         --app-drop-link 540 250 \
  #         --hdiutil-quiet \
  #         "ArgonInstaller-MacOS-Installer.dmg" \
  #         "Release/"
  #       continue-on-error: true
  #     - name: Update File
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: TMod Instakker-MacOS
  #         path: build/macos/Build/Products/TMod Instakker-MacOS-Installer.dmg
  #         retention-days: 1
  # build_android:
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   needs: test

  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: subosito/flutter-action@v1
  #       with:
  #         channel: 'stable'

  #     - run: echo $ANDROID_KEYS | base64 -d > android/app/key.jks
  #       env:
  #         ANDROID_KEYS: ${{ secrets.ANDROID_KEYS }}

  #     - run: flutter pub get
  #     - run: flutter build apk --split-per-abi
  #     - run: cp build/app/outputs/flutter-apk/app*.apk .

  #     - name: Release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         draft: true
  #         prerelease: false
  #         files: |
  #           app*.apk
  #         token: ${{ secrets.GITHUB_TOKEN }}
